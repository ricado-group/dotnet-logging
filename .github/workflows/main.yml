# Action Name
name: Main Automated Builds

# Environment Variables
env:
  PROJECT_NAME: "RICADO.Logging"

# Controls when the action will run. 
on:
  push:
    branches:
      - main
    tags:
      - '*.*.*'

# Workflow Jobs
jobs:
  # Build Job
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1 - Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v2
      
      # Step 2 - Extract Environment Variables
      - name: Extract Environment Variables
        uses: FranzDiebold/github-env-vars-action@v2.1.0
      
      # Step 3 - Setup .NET 5 with NuGet Authentication
      - name: Setup .NET 5 with NuGet Authentication
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.100'
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_APIKEY }}
      
      # Step 4 - Restore NuGet Packages
      - name: Restore NuGet Packages
        run: dotnet restore "${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj"
      
      # Step 5 - Build the Library
      - name: Build the Library
        run: dotnet build "${{ env.PROJECT_NAME }}/${{ env.PROJECT_NAME }}.csproj" -c Release
      
      # Step 6 - Pack the Library
      - name: Pack the Library
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: dotnet pack "${{ env.PROJECT_NAME}}/${{ env.PROJECT_NAME }}.csproj" -c Release -p:PackageVersion=${{ env.CI_REF_NAME }}
      
      # Step 7 - Push the Package to NuGet
      - name: Push the Package to Nuget
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: dotnet nuget push "${{ env.PROJECT_NAME }}/bin/Release/*.nupkg"
      
      # Step 8 - Setup .NET 5 with GitHub Packages Authentication
      - name: Setup .NET 5 with GitHub Packages Authentication
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.100'
          source-url: https://nuget.pkg.github.com/ricado-group/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GH_ACTIONS_PAT }}
      
      # Step 9 - Push the Package to GitHub Packages
      - name: Push the Package to GitHub Packages
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: dotnet nuget push "${{ env.PROJECT_NAME }}/bin/Release/*.nupkg"
